"""–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ DELETE

–ú–µ—Ç–æ–¥ DELETE –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í FastAPI –æ–±—Ä–∞–±–æ—Ç–∫–∞
DELETE-–∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @app.delete(). –ù–∞–ø—Ä–∏–º–µ—Ä:"""


import logging
from fastapi import FastAPI
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
app = FastAPI()


@app.delete("/items/{item_id}")
async def delete_item(item_id: int):
    logger.info(f'–û—Ç—Ä–∞–±–æ—Ç–∞–ª DELETE –∑–∞–ø—Ä–æ—Å –¥–ª—è item id = {item_id}.')
    return {"item_id": item_id}


"""–≠—Ç–æ—Ç –∫–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ DELETE-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è
URL-–∞–¥—Ä–µ—Å–∞ /items/{item_id}. –§—É–Ω–∫—Ü–∏—è delete_item() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
—ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-–æ–±—ä–µ–∫—Ç —Å —ç—Ç–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.


üî• –í–∞–∂–Ω–æ! –ó–∞—á–∞—Å—Ç—É—é –æ–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∞
–∏–∑–º–µ–Ω—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –ø–æ–ª–µ is_deleted –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ò—Å—Ç–∏–Ω–∞. –¢–∞–∫–∏–º
–æ–±—Ä–∞–∑–æ–≤ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–Ω–µ–µ —É–¥–∞–ª—ë–Ω–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç —Å–ø—É—Å—Ç—è –≤—Ä–µ–º—è.


–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞

FastAPI –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞ —Å
–ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è pydantic. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Item –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
–¥–∞–Ω–Ω—ã—Ö:"""

...
from typing import Optional
from pydantic import BaseModel


class Item(BaseModel):
    name: str
    description: Optional[str] = None
    price: float
    tax: Optional[float] = None
"""
...
–≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è name, description, price –∏ tax. –ü–æ–ª—è name –∏ price
–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã, –∞ –ø–æ–ª—è description –∏ tax –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã. –ó–∞—Ç–µ–º –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
—ç—Ç–æ—Ç –∫–ª–∞—Å—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞:"""
...
from fastapi import FastAPI
from typing import Optional
from pydantic import BaseModel
...
app = FastAPI()


class Item(BaseModel):
    name: str
    description: Optional[str] = None
    price: float
    tax: Optional[float] = None
...


@app.post("/items/")
async def create_item(item: Item):
    logger.info('–û—Ç—Ä–∞–±–æ—Ç–∞–ª POST –∑–∞–ø—Ä–æ—Å.')
    return item
@app.put("/items/{item_id}")
async def update_item(item_id: int, item: Item):
    logger.info(f'–û—Ç—Ä–∞–±–æ—Ç–∞–ª PUT –∑–∞–ø—Ä–æ—Å –¥–ª—è item id = {item_id}.')
    return {"item_id": item_id, "item": item}
"""...


–≠—Ç–æ—Ç –∫–æ–¥ –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ POST –∏ PUT –∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –æ–±—ä–µ–∫—Ç
Item –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –µ–≥–æ –∂–µ. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–ø–∏—Å–∞–Ω–∏—é –∫–ª–∞—Å—Å–∞ Item, —Ç–æ
FastAPI –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É 422 —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏.
"""